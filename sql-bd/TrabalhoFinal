
-- 1) Quantos são os produtos que são da CategoryID 2?
-- select * from products order by supplier_id
select count(*) from products
where category_id = 2;


-- 2) Quantos produtos com SupplierID idêntico ao CategoryID e que custam mais do que 10?
select count(*) from products
where supplier_id = category_id 
and unit_price >= 10;


-- 3) Liste todos os nomes de produtos, suas "Units" e seus respectivos preços distintos que pertecem às 
--categorias 1, 2 e 7;
select product_name "Product", units_in_stock "Units", unit_price "Price" from products
where category_id in(1,2,7);


-- 4) Liste os 5 primeiros nomes de produtos que começam com "A" ou tenham "h" no meio do nome. 
--Retorne em português os nomes das colunas;
select product_id "id", product_name "Produtos" from products 
where product_name like('A%') 
or product_name like('a%')
or product_name like ('%H%')
or product_name like ('%h%')
LIMIT 5;


--5) Dê a média de preços de todos os produtos das categorias entre 1 e 5. Arredonde para 1 casa decimal;
SELECT ROUND(AVG(unit_price)::numeric,2) "Média" FROM products
WHERE category_id BETWEEN 1 AND 5;


-- 6) Liste a média de preços e a quantidade de produtos distintos por SupplierID; 
--ordene pela média de preço, do maior para o menor, e só mostre os 5 primeiros;
SELECT DISTINCT 
	supplier_id,
	ROUND(AVG(unit_price)::numeric,2) "Média",
	COUNT(product_id) "Quant_Distintos" 
FROM products
GROUP BY supplier_id
ORDER BY "Média" DESC
LIMIT 5;


-- 7) Liste os clientes com mais pedidos - mas somente aqueles que tiverem a partir de 2 pedidos. 
-- --Corte explicitamente os clientes que compraram de funcionários sem ID;
SELECT customers.customer_id, company_name, numpedidos.totpedidos FROM customers;

INNER JOIN orders
ON orders.customer_id = customers.customer_id
AND orders.employee_id IS NOT NULL;

INNER JOIN (SELECT DISTINCT customer_id, COUNT(*) "totpedidos" FROM orders WHERE employee_id  IS NOT NULL GROUP BY customer_id) AS numpedidos
ON numpedidos.customer_id = customers.customer_id
WHERE numpedidos.totpedidos >= 2;


-- 8) Existe alguma cidade com mais de um código de área de telefone?
SELECT city, COUNT('tabela.codarea') from (

		SELECT DISTINCT city,
		CASE 
			WHEN POSITION('(' IN phone) = 1 AND POSITION(')' IN phone) > 2  
				THEN SUBSTRING(phone FROM 2 FOR ((POSITION(')' IN phone))- 2))
			WHEN POSITION('(' IN phone) = 0 AND POSITION('-' IN phone) > 1 
				THEN SUBSTRING(phone FROM 1 FOR ((POSITION('-' IN phone))-1))
			ELSE NULL
		END AS "CodArea"
		FROM customers

		UNION

		SELECT DISTINCT city,
		CASE 
			WHEN POSITION('(' IN home_phone) = 1 AND POSITION(')' IN home_phone) > 2  
				THEN SUBSTRING(home_phone FROM 2 FOR ((POSITION(')' IN home_phone))- 2))
			WHEN POSITION('(' IN home_phone) = 0 AND POSITION('-' IN home_phone) > 1 
				THEN SUBSTRING(home_phone FROM 1 FOR ((POSITION('-' IN home_phone))-1))
			ELSE NULL
		END AS "CodArea"
		FROM employees

		UNION

		SELECT DISTINCT city,
		CASE 
			WHEN POSITION('(' IN phone) = 1 AND POSITION(')' IN phone) > 2  
				THEN SUBSTRING(phone FROM 2 FOR ((POSITION(')' IN phone))- 2))
			WHEN POSITION('(' IN phone) = 0 AND POSITION('-' IN phone) > 1 
				THEN SUBSTRING(phone FROM 1 FOR ((POSITION('-' IN phone))-1))
			ELSE NULL
		END AS "CodArea"
		FROM suppliers
) AS "tabela"
GROUP By city
HAVING COUNT('tabela.codarea') >=2;


-- 9) Gere uma relação com os nomes dos clientes, suas cidades e países, em ordem alfabética de nome;
SELECT company_name, city, country FROM customers
ORDER BY company_name;


-- 10) Na relação do item (9), filtre pelos clientes da Alemanha, da França e da Espanha, excluindo-se os 
--clientes que vivem nas capitais destes países;
SELECT company_name, city, country  FROM customers
WHERE country IN('Germany', 'France','Spain')
AND city  NOT IN ('Berlin','Paris','Madrid')
ORDER BY company_name